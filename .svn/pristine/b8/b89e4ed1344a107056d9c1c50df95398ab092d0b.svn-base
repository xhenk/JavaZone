% !TeX spellcheck = nb_NO
\documentclass[10pt,a4paper]{article}
\usepackage[latin1]{inputenc}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{graphicx}
\usepackage{amssymb}
\author{Henning Klevjer}
\title{SteriaQuiz - teknisk dokumentasjon}
\date{\today}
\renewcommand{\figurename}{Figur}
\begin{document}
	\maketitle
	\section{SteriaQuiz}
		SteriaQuizen er laget for profilering av Steria på konferanser (JavaZone, etc.), bedriftspresentasjoner og liknende. Den er i hovedsak skrevet i javascript, og bruker Sencha Touch 2-APIet\footnote{http://sencha.com} til alt grafisk.
		Registrering av svar foregår i PHP\footnote{Det \textit{døende} serversidespråket} til en XML-fil. 
		
		Presentasjon av deltakere er gjort i XML med stylesheets i XSL og CSS, i tillegg til lett javascripting for å trekke en vinner.
		
		Dette dokumentet er skrevet mest som et oppslagsverk. All informasjonen her inne er ikke nødvendig for å endre koden. De fysiske delene (``programmene'') i quizprosjektet blir forklart under. 
		
		\subsubsection*{Støttede nettlesere}
			Siden quizen bruker Sencha er den begrenset til WebKit-nettlesere\footnote{http://webkit.org}. For øyeblikket er disse de viktigste WebKit-baserte nettleserne:
			{\small
			\begin{itemize}
				\item[] \textbf{Android Browser (følger med operativsystemet)}
				\item[] Safari
				\item[] \textbf{Safari Mobile (følger med operativsystemet)}
				\item[] Google Chrome
				\item[] \textbf{Google Chrome for Android}
			\end{itemize}
			 {\footnotesize (Mobilnettlesere markert i \textbf{bold})}\\
			}
			Dette betyr altså at Opera og Internet Explorer ikke støttes, hverken på mobiltelefon eller ellers. 
			
	\section{Quiz-fila}
		Quiz-fila definerer oppgavene, løsninger og informasjon om gevinst og trekning. Den er skrevet i XML-format og endres med en fritt valgt tekstbehandler. Hver quiz-fil støtter ett \texttt{<quiz>}-element. Under \texttt{<quiz>} er det en tittel, \texttt{<title>} og to informasjonselementer, \texttt{<info>} som beskriver quizen, og \texttt{<lastPageInfo>} som blir vist til brukeren etter at svarene er registrert.
		Ett \texttt{<quiz>}-element kan inneholde evig mange oppgaver, \texttt{<question>}. Hvert \texttt{<question>} består alltid av kun en \texttt{<type>}, en \texttt{<title>} og \texttt{<correct>}, der \texttt{<type>} er en av paneltypene beskrevet under, i punkt \ref{sec:mobs}, \texttt{<title>} er tittelen (oppgaveteksten) og \texttt{<correct>} beskriver svaret man skal fram til i oppgaven. 
		\begin{figure}
			\centering
			\includegraphics[width=.8\textwidth]{xml-fil.eps}
			\caption{Quiz-fila}
		\end{figure}
	\section{Mobilsiden}
		\label{sec:mobs}
		Mobilsiden -- altså selve quizen -- er en samling Sencha-paneler, hver definert i sin variabel. Disse kan fjernes og legges til i quizen ved at man lager flere instanser av samme type panel. Siden noe av GUIet som genereres med Sencha trenger spørsmåldata for å lastes, gjøres initialiseringen i to faser, \texttt{initStep1()} og \texttt{initStep2()}. Steg to settes i gang når spørsmålene er lastet.	Metoden \texttt{switchTo()} bytter mellom vinduer.
		\subsection{Kjøring}
		Førstesiden inneholder en startknapp og første informasjonsfelt fra quiz-fila. Når man etter å ha trykket på startknappen kommer til første oppgave åpnes en ``karusell''\footnote{Ext.carousel.Carousel i Sencha API-et}, en sencha-container som inneholder alle oppgavene. Karusellen gjør det mulig å ``swipe'' mellom spørsmålene. Hver ``swipe'' trigger en meldingsboks med oppgaveteksten der dette ikke er skrevet på siden. 
		
		På alle sider er det også mulig å trykke på enten en knapp eller pil for å komme videre til neste eller forrige spørsmål.
		
		Når man har svart på alle spørsmål har man muligheten til å levere inn svarene. Da blir disse svarene lagret i nettleseren via localStorage\footnote{http://www.w3.org/TR/webstorage/}. Dermed kan man sjekke spørsmålene sine senere om man må svare på utrolig viktige telefonsamtaler som dukker opp midt i quizen, for eksempel. Lagringen er nå satt til å gjøres ved registrering, men kan enkelt settes til å lagre på hvert enkeltsvar. Et argument mot denne mellomlagringen er at det kan bli enklere å sammenligne poengsummer og svar og spekulere seg fram til hva som er riktig. Men hvor farlig dette er kan også diskuteres.
		
		Når man registrerer navn, epost og telefonnummer i registreringsskjemaet som følger, er man nødt til å bruke en epostadresse og et telefonnummer som ikke er registrert fra før -- dette for å unngå at man øker vinnersjansene med flere besvarelser. Informasjonen fra brukeren lagres i to xml-filer, \texttt{scoreboard.xml} og \texttt{scoreboard-private.xml}. Mer om disse under punkt \ref{sec:sboard}.
		
		Når alt er gjort får man en beskjed om når trekningen foregår og lignende.
		
		
		\subsection{Paneltyper}
			For å være ekstra presis er det ikke panelene som er forskjellige, men innholdet i dem. Vi har fire forskjellige typer paneler:
			\subsubsection*{Map}
				{\footnotesize \texttt{<type>} i .quiz-fil: \texttt{map}}\\
				Dette panelet er ikke i bruk. Meningen var at brukeren skulle kunne få oppgaver som f.eks ``Hvor ligger Sterias hovedkontor?'', hvor brukeren zoomer seg inn på kartet og finner (innenfor en satt margin (``threshold'')) stedet med koordinatene angitt i svarvariabelen. Grunnen til at det ikke er i bruk er at oppgavene ble for tungvinne for brukeren og at kartet i seg (Google Maps API) selv bruker for mye ressurser på telefonen, noe som resulterer i en rimelig kjedelig brukeropplevelse, siden oppgaven tar for lang tid.
			\subsubsection*{Slider}
			{\footnotesize \texttt{<type>} i .quiz-fil: \texttt{slider}}\\
				Slider-panelet brukes for at brukeren skal velge et område i et bilde som samsvarer med en fasitverdi fra quiz-fila. Vi har brukt dette panelet til spørsmålet ``Hvor høyt er bygget hvor Steria har sitt norske hovedkontor''. Etasjen bestemmes av området brukeren trykker på, med en event hook på et \texttt{<div>}-element som trekker ut hvor på siden (i y-aksen) man har trykket. Dette tallet brukes til å regne ut hvilken etasje det er man gjetter på i bildet. Denne spesielle utregningen er hardkodet.
			\subsubsection*{Bildevelger}
			{\footnotesize \texttt{<type>} i .quiz-fil: \texttt{imgsel}}\\
				I denne panelet er meningen at man skal velge riktig av fire bilder. Det kan brukes i oppgaver hvor man f.eks. skal finne ett bilde som ikke passer inn blant de andre. De fire bildene er vanlige \texttt{<img>}-tags, og klikkene blir registrert på panelet de ligger i. 
			
			\subsubsection*{Radio buttons}
			{\footnotesize \texttt{<type>} i .quiz-fil: \texttt{ordinary}}\\
			Dette er de klassiske oppgavene hvor svarer på ett spørsmål med ett riktig av flere svar. Disse feltene kan sannsynligvis enkelt utvides til å bli ``Check box''-er, hvor man altså har flere riktige svar. 
		
	\section{Deltakerlisten}
		\label{sec:sboard}
		
		Deltakerlisten er todelt. Den blir presentert til brukeren som \texttt{scoreboard.xml}, den \textit{offentlige} listen, og til ``quizmastere'' som \texttt{scoreboard-private.xml}. I førstnevnte noteres bare tidspunkt for levering, navn og poengsum. Her kan deltakerne se hvordan de og andre deltakere ligger an, og denne siden kan også brukes til trekning av vinnere. Den private siden skal kun brukes av quizmastere for å finne kontaktinformasjonen til vinneren. \texttt{scoreboard.xml} kan godt publiseres på nettet og linkes til fra avslutningssiden i quizen, mens \texttt{scoreboard-private.xml} (hvor deltakernes telefonnummer og epostadresser er lagret) må holdes privat, men skrivbar.
		
		Deltakerlistene er skrevet i XML for enkelhets skyld -- de kan endres manuelt om det trengs. Begge er stilsatt med CSS for å matche sterias profil (\texttt{scoreboard-style.css}). XSL brukes for å sette opp listene korrekt ut fra innholdet i XML-fila.
		\begin{figure}[t]
			\begin{minipage}[b]{0.5\textwidth}
				\centering
				\includegraphics[width=\textwidth]{scoreboard.eps}
				\caption{{\footnotesize Privat scoreboard -- dette brukes for å finne kontaktinformasjon om vinneren}}
				\label{fig:figure1}
			\end{minipage}
			\hspace{2em}
			\begin{minipage}[b]{0.5\textwidth}
				\centering
				\includegraphics[width=\textwidth]{scoreboard2.eps}
				\caption{{\footnotesize Offentlig scoreboard -- dette kan presenteres til brukerne og brukes til trekning}}
				\label{fig:figure2}
			\end{minipage}
		\end{figure}
	\section{Svakheter}
		\subsubsection*{Skjermretning}
			Hvis mobiltelefonen holdes i ``landscape-modus'' (sidelengs) blir det svært mye scrolling. 
		\subsubsection*{Liten skjerm}
			Bruker man en mobiltelefon med liten skjerm kan bildene i bildevelgeroppgaven bli veldig små. Er det i tillegg tekst i bildene (som i eksempelet) kan dette bli vanskelig å få med seg.
		\begin{figure}
			\centering
			\includegraphics[width=\textwidth]{utsyn.eps}
			\caption{Forskjellige skjermbilder fra SteriaQuiz}
		\end{figure}
		\subsubsection*{Tekstkoding}
			Vi har plages mye med å få ISO-8859-1-koding til å fungere med Sencha. Derfor har vi brukt HTML-escape-characters der det trengs spesialtegn. \{æøåÆØÅ\} fungerer dessverre heller ikke.
			
			
	\subsection*{Fotnoter}
	{\footnotesize
	\begin{itemize}
		\item[] Koden til SteriaQuizen ligger på: https://github.com/xhenk/JavaZone.git
		\item[] Dokumentasjon til Sencha Touch 2: http://docs.sencha.com/touch/2-0/
	\end{itemize}
	}

\end{document}

